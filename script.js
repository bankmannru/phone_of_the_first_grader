document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏
    updateTime();
    setInterval(updateTime, 60000); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã Geometry Dash
    const canvas = document.getElementById('gameCanvas');
    const game = new GeometryDash(canvas);
    document.getElementById('startGame').addEventListener('click', game.start);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    initApps();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–æ–≤ WhatsApp
    initWhatsApp();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–≤–æ–Ω–∫–æ–≤
    initCallHistory();
    
    // –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤
    scheduleIncomingCalls();
    
    // –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    scheduleNewMessages();
    
    // –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    scheduleRandomPushNotifications();
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
function updateTime() {
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    document.querySelector('.time').textContent = `${hours}:${minutes}`;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
function initApps() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    document.querySelectorAll('.app').forEach(app => {
        app.addEventListener('click', () => {
            const appName = app.getAttribute('data-app');
            openApp(appName);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–º–æ–π" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
    document.querySelectorAll('.home-button-app').forEach(button => {
        button.addEventListener('click', () => {
            goToHomeScreen();
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ —á–∞—Ç–µ
    document.querySelector('.chat-back').addEventListener('click', () => {
        document.querySelector('.chat-screen').classList.remove('active-screen');
        document.querySelector('.whatsapp-screen').classList.add('active-screen');
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–º–æ–π" –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
    document.querySelector('.home-button').addEventListener('click', () => {
        goToHomeScreen();
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–µ–π–¥–∂–∏ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –Ω–∞ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    updateAppBadges();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flood-—Ä–µ–∂–∏–º–∞
    initFloodMode();
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function openApp(appName) {
    document.querySelectorAll('.screen-content').forEach(screen => {
        screen.classList.remove('active-screen');
    });
    
    document.querySelector('.home-screen').classList.remove('active-screen');
    
    switch (appName) {
        case 'geometrydash':
            document.querySelector('.geometry-dash-screen').classList.add('active-screen');
            break;
        case 'whatsapp':
            document.querySelector('.whatsapp-screen').classList.add('active-screen');
            break;
        case 'phone':
            document.querySelector('.phone-screen').classList.add('active-screen');
            break;
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function closeCurrentApp() {
    document.querySelectorAll('.screen-content').forEach(screen => {
        screen.classList.remove('active-screen');
    });
    
    document.querySelector('.home-screen').classList.add('active-screen');
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–º–∞—à–Ω–∏–π —ç–∫—Ä–∞–Ω
function goToHomeScreen() {
    document.querySelectorAll('.screen-content').forEach(screen => {
        screen.classList.remove('active-screen');
    });
    
    document.querySelector('.home-screen').classList.add('active-screen');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WhatsApp
function initWhatsApp() {
    const chatList = document.querySelector('.chat-list');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–∞—Ç–æ–≤
    chats.forEach(chat => {
        const chatItem = document.createElement('div');
        chatItem.className = 'chat-item';
        chatItem.setAttribute('data-chat-id', chat.id);
        
        chatItem.innerHTML = `
            <div class="chat-avatar">${chat.avatar}</div>
            <div class="chat-info">
                <div class="chat-name">${chat.name}</div>
                <div class="chat-last-message">${chat.lastMessage}</div>
            </div>
            <div class="chat-meta">
                <div class="chat-time">${chat.time}</div>
                ${chat.unread > 0 ? `<div class="unread-badge">${chat.unread}</div>` : ''}
            </div>
        `;
        
        chatItem.addEventListener('click', () => {
            openChat(chat);
        });
        
        chatList.appendChild(chatItem);
    });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞
function openChat(chat) {
    const chatScreen = document.querySelector('.chat-screen');
    const whatsappScreen = document.querySelector('.whatsapp-screen');
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ
    document.querySelector('.contact-avatar').textContent = chat.avatar;
    document.querySelector('.contact-name').textContent = chat.name;
    
    // –û—á–∏—Å—Ç–∫–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    const chatMessages = document.querySelector('.chat-messages');
    chatMessages.innerHTML = '';
    
    chat.messages.forEach(message => {
        const messageElement = document.createElement('div');
        messageElement.className = `message ${message.received ? 'received' : 'sent'}`;
        
        messageElement.innerHTML = `
            <div class="message-content">${message.text}</div>
            <div class="message-time">${message.time}</div>
        `;
        
        chatMessages.appendChild(messageElement);
    });
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    chatMessages.scrollTop = chatMessages.scrollHeight;
    
    // –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    const chatItem = document.querySelector(`.chat-item[data-chat-id="${chat.id}"]`);
    const unreadBadge = chatItem.querySelector('.unread-badge');
    if (unreadBadge) {
        unreadBadge.remove();
        chat.unread = 0;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂–∏ –Ω–∞ –∏–∫–æ–Ω–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
        updateAppBadges();
    }
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ —ç–∫—Ä–∞–Ω–∞ —á–∞—Ç–∞
    whatsappScreen.classList.remove('active-screen');
    chatScreen.classList.add('active-screen');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–≤–æ–Ω–∫–æ–≤
function initCallHistory() {
    const callHistory = document.querySelector('.call-history');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏—Å—Ç–æ—Ä–∏–∏ –∑–≤–æ–Ω–∫–æ–≤
    calls.forEach(call => {
        const callItem = document.createElement('div');
        callItem.className = 'call-item';
        
        let iconClass = '';
        switch (call.type) {
            case 'missed':
                iconClass = 'missed';
                break;
            case 'outgoing':
                iconClass = 'outgoing';
                break;
            case 'incoming':
                iconClass = 'incoming';
                break;
        }
        
        callItem.innerHTML = `
            <div class="call-icon ${iconClass}">
                <i class="fas fa-${call.type === 'outgoing' ? 'phone-alt' : call.type === 'incoming' ? 'phone' : 'phone-slash'}"></i>
            </div>
            <div class="call-details">
                <div class="call-contact">${call.name} ${call.avatar}</div>
                <div class="call-time">${call.time}${call.duration ? ` ‚Ä¢ ${call.duration}` : ''}</div>
            </div>
        `;
        
        callHistory.appendChild(callItem);
    });
}

// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤
function scheduleIncomingCalls() {
    incomingCalls.forEach(call => {
        setTimeout(() => {
            showIncomingCall(call);
        }, call.delay);
    });
}

// –ü–æ–∫–∞–∑ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
function showIncomingCall(call) {
    // –ï—Å–ª–∏ –º—ã –Ω–∞ –¥–æ–º–∞—à–Ω–µ–º —ç–∫—Ä–∞–Ω–µ, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (document.querySelector('.home-screen').classList.contains('active-screen')) {
        sendPushNotification('–¢–µ–ª–µ—Ñ–æ–Ω', `–í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫: ${call.name}`, 'üìû', 1000);
        
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º —ç–∫—Ä–∞–Ω–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
        setTimeout(() => {
            showIncomingCallScreen(call);
        }, 3000);
    } else {
        showIncomingCallScreen(call);
    }
}

// –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
function showIncomingCallScreen(call) {
    const incomingCallScreen = document.querySelector('.incoming-call-screen');
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–≤–æ–Ω—è—â–µ–º
    document.querySelector('.caller-avatar').textContent = call.avatar;
    document.querySelector('.caller-name').textContent = call.name;
    
    // –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
    document.querySelectorAll('.screen-content, .home-screen').forEach(screen => {
        screen.classList.remove('active-screen');
    });
    
    incomingCallScreen.classList.add('active-screen');
    
    // –ó–≤—É–∫ –∑–≤–æ–Ω–∫–∞
    const ringtone = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-classic-short-phone-ring-1357.mp3');
    ringtone.loop = true;
    ringtone.play();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    const declineButton = document.querySelector('.decline-call');
    const acceptButton = document.querySelector('.accept-call');
    
    const declineHandler = () => {
        ringtone.pause();
        incomingCallScreen.classList.remove('active-screen');
        document.querySelector('.home-screen').classList.add('active-screen');
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –∑–≤–æ–Ω–∫–æ–≤
        addCallToHistory(call, 'missed');
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        declineButton.removeEventListener('click', declineHandler);
        acceptButton.removeEventListener('click', acceptHandler);
    };
    
    const acceptHandler = () => {
        ringtone.pause();
        incomingCallScreen.classList.remove('active-screen');
        showActiveCall(call);
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        declineButton.removeEventListener('click', declineHandler);
        acceptButton.removeEventListener('click', acceptHandler);
    };
    
    declineButton.addEventListener('click', declineHandler);
    acceptButton.addEventListener('click', acceptHandler);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
    setTimeout(() => {
        if (incomingCallScreen.classList.contains('active-screen')) {
            declineHandler();
        }
    }, 15000);
}

// –ü–æ–∫–∞–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞
function showActiveCall(call) {
    const activeCallScreen = document.querySelector('.active-call-screen');
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–≤–æ–Ω—è—â–µ–º
    document.querySelector('.active-call-screen .caller-avatar').textContent = call.avatar;
    document.querySelector('.active-call-screen .caller-name').textContent = call.name;
    
    // –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞
    activeCallScreen.classList.add('active-screen');
    
    // –¢–∞–π–º–µ—Ä –∑–≤–æ–Ω–∫–∞
    let seconds = 0;
    const durationElement = document.querySelector('.call-duration');
    
    const callTimer = setInterval(() => {
        seconds++;
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        durationElement.textContent = `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
    }, 1000);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞
    const endCallButton = document.querySelector('.end-call');
    
    const endCallHandler = () => {
        clearInterval(callTimer);
        activeCallScreen.classList.remove('active-screen');
        document.querySelector('.home-screen').classList.add('active-screen');
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –∑–≤–æ–Ω–∫–æ–≤
        addCallToHistory(call, 'incoming', durationElement.textContent);
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        endCallButton.removeEventListener('click', endCallHandler);
    };
    
    endCallButton.addEventListener('click', endCallHandler);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è (30-60 —Å–µ–∫—É–Ω–¥)
    const randomDuration = Math.floor(Math.random() * 30000) + 30000;
    setTimeout(endCallHandler, randomDuration);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
function addCallToHistory(call, type, duration = null) {
    const callHistory = document.querySelector('.call-history');
    const now = new Date();
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    const time = `${hours}:${minutes}`;
    
    const callItem = document.createElement('div');
    callItem.className = 'call-item';
    
    callItem.innerHTML = `
        <div class="call-icon ${type}">
            <i class="fas fa-${type === 'outgoing' ? 'phone-alt' : type === 'incoming' ? 'phone' : 'phone-slash'}"></i>
        </div>
        <div class="call-details">
            <div class="call-contact">${call.name} ${call.avatar}</div>
            <div class="call-time">–°–µ–π—á–∞—Å${duration ? ` ‚Ä¢ ${duration}` : ''}</div>
        </div>
    `;
    
    callHistory.insertBefore(callItem, callHistory.firstChild);
}

// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function scheduleNewMessages() {
    // –°–ª—É—á–∞–π–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
    setInterval(() => {
        if (Math.random() < 0.3) { // 30% —à–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const randomChatIndex = Math.floor(Math.random() * chats.length);
            const chat = chats[randomChatIndex];
            
            // –°–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            let messageText = '';
            switch (chat.name) {
                case '–ú–∞–º–∞':
                    messageText = ['–¢—ã –ø–æ–µ–ª?', '–°–¥–µ–ª–∞–ª —É—Ä–æ–∫–∏?', '–ö–æ–≥–¥–∞ –ø—Ä–∏–¥–µ—à—å –¥–æ–º–æ–π?', '–ù–µ –∑–∞–±—É–¥—å –ø–æ–º—ã—Ç—å –ø–æ—Å—É–¥—É!'][Math.floor(Math.random() * 4)];
                    break;
                case '–ü–∞–ø–∞':
                    messageText = ['–ö–∞–∫ –¥–µ–ª–∞ –≤ —à–∫–æ–ª–µ?', '–ü–æ–º–æ–≥–∏ –º–∞–º–µ –ø–æ –¥–æ–º—É', '–ù–µ —Å–∏–¥–∏ –¥–æ–ª–≥–æ –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º', '–ü–æ–π–¥–µ–º –Ω–∞ —Ä—ã–±–∞–ª–∫—É –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ?'][Math.floor(Math.random() * 4)];
                    break;
                case '–ë–∞–±—É—à–∫–∞':
                    messageText = ['–ö—É—à–∞–ª —Å–µ–≥–æ–¥–Ω—è?', '–¢–µ–ø–ª–æ –æ–¥–µ–ª—Å—è?', '–Ø –ø–∏—Ä–æ–∂–∫–∏ –∏—Å–ø–µ–∫–ª–∞', '–ü—Ä–∏–µ–∑–∂–∞–π –≤ –≥–æ—Å—Ç–∏'][Math.floor(Math.random() * 4)];
                    break;
                case '–ê–ª–∫–∞—à':
                    messageText = ['–ì–¥–µ –º–∞–∏ –¥–µ–Ω—å–≥–∏?', '–¢—ã –≥–¥–µ?', '–î–∞–π 100 —Ä—É–±–ª–µ–π –¥–æ –∑–∞–≤—Ç—Ä–∞', '–ü–µ—Ä–µ–¥–∞–π –ø—Ä–∏–≤–µ—Ç –º–∞–º–µ'][Math.floor(Math.random() * 4)];
                    break;
                case '–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫ –ü–µ—Ç—è':
                    messageText = ['–ß—Ç–æ –∑–∞–¥–∞–ª–∏ –ø–æ –º–∞—Ç–µ—à–µ?', '–ü–æ–π–¥–µ–º –≥—É–ª—è—Ç—å?', '–°–∫–∏–Ω—å –î–ó', '–í–æ —á—Ç–æ –∏–≥—Ä–∞–µ—à—å?'][Math.floor(Math.random() * 4)];
                    break;
            }
            
            // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
            const now = new Date();
            const hours = now.getHours().toString().padStart(2, '0');
            const minutes = now.getMinutes().toString().padStart(2, '0');
            const time = `${hours}:${minutes}`;
            
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
            const newMessage = {
                text: messageText,
                time: time,
                received: true
            };
            
            chat.messages.push(newMessage);
            chat.lastMessage = messageText;
            chat.time = time;
            chat.unread++;
            
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI, –µ—Å–ª–∏ –º—ã –Ω–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ
            const chatScreen = document.querySelector('.chat-screen');
            const currentChatName = document.querySelector('.contact-name').textContent;
            
            if (!chatScreen.classList.contains('active-screen') || currentChatName !== chat.name) {
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
                const chatItem = document.querySelector(`.chat-item[data-chat-id="${chat.id}"]`);
                const lastMessageElement = chatItem.querySelector('.chat-last-message');
                const timeElement = chatItem.querySelector('.chat-time');
                
                lastMessageElement.textContent = messageText;
                timeElement.textContent = time;
                
                // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–∞ —Å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏
                let unreadBadge = chatItem.querySelector('.unread-badge');
                if (unreadBadge) {
                    unreadBadge.textContent = chat.unread;
                } else {
                    const chatMeta = chatItem.querySelector('.chat-meta');
                    unreadBadge = document.createElement('div');
                    unreadBadge.className = 'unread-badge';
                    unreadBadge.textContent = chat.unread;
                    chatMeta.appendChild(unreadBadge);
                }
                
                // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                showNotification(chat.name, messageText, chat.avatar);
            } else {
                // –ï—Å–ª–∏ –º—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
                const chatMessages = document.querySelector('.chat-messages');
                const messageElement = document.createElement('div');
                messageElement.className = 'message received';
                
                messageElement.innerHTML = `
                    <div class="message-content">${messageText}</div>
                    <div class="message-time">${time}</div>
                `;
                
                chatMessages.appendChild(messageElement);
                chatMessages.scrollTop = chatMessages.scrollHeight;
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
                chat.unread = 0;
            }
        }
    }, 30000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π –Ω–∞ –∏–∫–æ–Ω–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
function updateAppBadges() {
    // –ü–æ–¥—Å—á–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ WhatsApp
    const totalUnread = chats.reduce((sum, chat) => sum + chat.unread, 0);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–∞ WhatsApp
    const whatsappApp = document.querySelector('.app[data-app="whatsapp"]');
    let whatsappBadge = whatsappApp.querySelector('.app-badge');
    
    if (totalUnread > 0) {
        if (!whatsappBadge) {
            whatsappBadge = document.createElement('div');
            whatsappBadge.className = 'app-badge';
            whatsappApp.querySelector('.app-icon').appendChild(whatsappBadge);
        }
        whatsappBadge.textContent = totalUnread;
    } else if (whatsappBadge) {
        whatsappBadge.remove();
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏)
    const missedCalls = calls.filter(call => call.type === 'missed').length;
    const phoneApp = document.querySelector('.app[data-app="phone"]');
    let phoneBadge = phoneApp.querySelector('.app-badge');
    
    if (missedCalls > 0) {
        if (!phoneBadge) {
            phoneBadge = document.createElement('div');
            phoneBadge.className = 'app-badge';
            phoneApp.querySelector('.app-icon').appendChild(phoneBadge);
        }
        phoneBadge.textContent = missedCalls;
    } else if (phoneBadge) {
        phoneBadge.remove();
    }
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(sender, message, avatar) {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const existingNotifications = document.querySelectorAll('.notification');
    existingNotifications.forEach(notification => {
        notification.remove();
    });
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –º—ã –Ω–µ –Ω–∞ –¥–æ–º–∞—à–Ω–µ–º —ç–∫—Ä–∞–Ω–µ
    if (!document.querySelector('.home-screen').classList.contains('active-screen')) {
        const notification = document.createElement('div');
        notification.className = 'notification';
        
        notification.innerHTML = `
            <div class="notification-icon">${avatar}</div>
            <div class="notification-content">
                <div class="notification-sender">${sender}</div>
                <div class="notification-message">${message}</div>
            </div>
        `;
        
        document.querySelector('.screen').appendChild(notification);
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notificationSound = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-software-interface-start-2574.mp3');
        notificationSound.volume = 0.5;
        notificationSound.play();
        
        // –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.animation = 'notification-slide-out 0.3s ease-in forwards';
            setTimeout(() => {
                notification.remove();
            }, 300);
        }, 3000);
    } else {
        // –ï—Å–ª–∏ –º—ã –Ω–∞ –¥–æ–º–∞—à–Ω–µ–º —ç–∫—Ä–∞–Ω–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        sendPushNotification('WhatsApp', `${sender}: ${message}`, 'üì±');
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π –Ω–∞ –∏–∫–æ–Ω–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    updateAppBadges();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function sendPushNotification(title, message, icon, delay = 0) {
    setTimeout(() => {
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const pushNotification = document.createElement('div');
        pushNotification.className = 'push-notification';
        
        pushNotification.innerHTML = `
            <div class="push-notification-header">
                <div class="push-notification-app-icon">${icon}</div>
                <div class="push-notification-app-name">${title}</div>
                <div class="push-notification-time">–°–µ–π—á–∞—Å</div>
            </div>
            <div class="push-notification-content">${message}</div>
        `;
        
        document.querySelector('.screen').appendChild(pushNotification);
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const notificationSound = new Audio('https://assets.mixkit.co/sfx/preview/mixkit-software-interface-start-2574.mp3');
        notificationSound.volume = 0.5;
        notificationSound.play();
        
        // –í–∏–±—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
        if ('vibrate' in navigator) {
            navigator.vibrate(200);
        }
        
        // –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            pushNotification.style.animation = 'push-notification-slide-out 0.3s ease-in forwards';
            setTimeout(() => {
                pushNotification.remove();
            }, 300);
        }, 5000);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        pushNotification.addEventListener('click', () => {
            pushNotification.remove();
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            if (title === 'WhatsApp') {
                openApp('whatsapp');
                // –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞—Ö–æ–¥–∏–º —á–∞—Ç –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
                const chat = chats.find(c => c.name === message.split(':')[0]);
                if (chat) {
                    setTimeout(() => openChat(chat), 100);
                }
            } else if (title === '–¢–µ–ª–µ—Ñ–æ–Ω') {
                openApp('phone');
            }
        });
    }, delay);
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const style = document.createElement('style');
style.textContent = `
    @keyframes notification-slide-out {
        from {
            transform: translateX(-50%) translateY(0);
            opacity: 1;
        }
        to {
            transform: translateX(-50%) translateY(-100%);
            opacity: 0;
        }
    }
    
    .app-badge {
        position: absolute;
        top: -5px;
        right: -5px;
        width: 20px;
        height: 20px;
        background-color: red;
        color: white;
        border-radius: 50%;
        font-size: 12px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    .app-icon {
        position: relative;
    }
    
    .push-notification {
        position: absolute;
        top: 60px;
        left: 10px;
        right: 10px;
        background-color: rgba(255, 255, 255, 0.95);
        color: black;
        padding: 12px 15px;
        border-radius: 12px;
        z-index: 100;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        animation: push-notification-slide-in 0.3s ease-out;
        cursor: pointer;
    }
    
    @keyframes push-notification-slide-in {
        from {
            transform: translateY(-100%);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }
    
    @keyframes push-notification-slide-out {
        from {
            transform: translateY(0);
            opacity: 1;
        }
        to {
            transform: translateY(-100%);
            opacity: 0;
        }
    }
    
    .push-notification-header {
        display: flex;
        align-items: center;
        margin-bottom: 5px;
    }
    
    .push-notification-app-icon {
        width: 20px;
        height: 20px;
        border-radius: 5px;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 12px;
        margin-right: 8px;
        background-color: #25D366;
        color: white;
    }
    
    .push-notification-app-name {
        font-weight: bold;
        font-size: 14px;
        flex: 1;
    }
    
    .push-notification-time {
        font-size: 12px;
        color: #777;
    }
    
    .push-notification-content {
        font-size: 14px;
    }
`;
document.head.appendChild(style);

// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function scheduleRandomPushNotifications() {
    // –ú–∞—Å—Å–∏–≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const possibleNotifications = [
        { title: '–®–∫–æ–ª–∞', message: '–ó–∞–≤—Ç—Ä–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ!', icon: 'üè´', delay: 60000 },
        { title: 'YouTube', message: '–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –æ—Ç –≤–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ –±–ª–æ–≥–µ—Ä–∞', icon: 'üì∫', delay: 120000 },
        { title: '–ò–≥—Ä—ã', message: '–¢–≤–æ–π –¥—Ä—É–≥ –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è –≤ –∏–≥—Ä—É', icon: 'üéÆ', delay: 180000 },
        { title: '–ü–æ–≥–æ–¥–∞', message: '–ó–∞–≤—Ç—Ä–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è –¥–æ–∂–¥—å, –Ω–µ –∑–∞–±—É–¥—å –∑–æ–Ω—Ç', icon: '‚òî', delay: 240000 }
    ];
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    possibleNotifications.forEach(notification => {
        setTimeout(() => {
            if (Math.random() < 0.7) { // 70% —à–∞–Ω—Å –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                sendPushNotification(notification.title, notification.message, notification.icon);
            }
        }, notification.delay);
    });
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Flood-—Ä–µ–∂–∏–º–∞
function initFloodMode() {
    const floodToggle = document.getElementById('floodModeToggle');
    
    floodToggle.addEventListener('change', function() {
        if (this.checked) {
            // –í–∫–ª—é—á–∞–µ–º Flood-—Ä–µ–∂–∏–º
            document.querySelector('.phone').classList.add('flood-mode-active');
            startFloodMode();
        } else {
            // –í—ã–∫–ª—é—á–∞–µ–º Flood-—Ä–µ–∂–∏–º
            document.querySelector('.phone').classList.remove('flood-mode-active');
            stopFloodMode();
        }
    });
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ Flood-—Ä–µ–∂–∏–º–∞
let floodCallInterval;
let floodMessageInterval;

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Flood-—Ä–µ–∂–∏–º–∞
function startFloodMode() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞
    sendPushNotification('–°–∏—Å—Ç–µ–º–∞', 'Flood-—Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!', '‚ö†Ô∏è');
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å–ø–∞–º–∏—Ç—å –∑–≤–æ–Ω–∫–∞–º–∏ –∫–∞–∂–¥—ã–µ 10-15 —Å–µ–∫—É–Ω–¥
    floodCallInterval = setInterval(() => {
        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –∑–≤–æ–Ω–∫–∞
        const randomCallIndex = Math.floor(Math.random() * incomingCalls.length);
        const randomCall = incomingCalls[randomCallIndex];
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫
        showIncomingCall(randomCall);
    }, Math.random() * 5000 + 10000); // 10-15 —Å–µ–∫—É–Ω–¥
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å–ø–∞–º–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∫–∞–∂–¥—ã–µ 3-7 —Å–µ–∫—É–Ω–¥
    floodMessageInterval = setInterval(() => {
        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —á–∞—Ç
        const randomChatIndex = Math.floor(Math.random() * chats.length);
        const chat = chats[randomChatIndex];
        
        // –°–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        let messageText = '';
        switch (chat.name) {
            case '–ú–∞–º–∞':
                messageText = ['–ì–î–ï –¢–´???', '–°–†–û–ß–ù–û –ü–ï–†–ï–ó–í–û–ù–ò!!!', '–ü–û–ß–ï–ú–£ –ù–ï –û–¢–í–ï–ß–ê–ï–®–¨?!', '–ù–ï–ú–ï–î–õ–ï–ù–ù–û –î–û–ú–û–ô!!!'][Math.floor(Math.random() * 4)];
                break;
            case '–ü–∞–ø–∞':
                messageText = ['–ü–µ—Ä–µ–∑–≤–æ–Ω–∏ —Å—Ä–æ—á–Ω–æ!', '–ì–¥–µ –¥–µ–Ω—å–≥–∏?', '–¢—ã –≥–¥–µ –ø—Ä–æ–ø–∞–ª?', '–ú–∞–º–∞ –≤–æ–ª–Ω—É–µ—Ç—Å—è!'][Math.floor(Math.random() * 4)];
                break;
            case '–ë–∞–±—É—à–∫–∞':
                messageText = ['–í–Ω—É—á–µ–∫, –æ—Ç–≤–µ—Ç—å!', '–Ø –≤–æ–ª–Ω—É—é—Å—å!', '–ü–æ–∑–≤–æ–Ω–∏ –±–∞–±—É—à–∫–µ!', '–¢—ã –∫—É—à–∞–ª —Å–µ–≥–æ–¥–Ω—è???'][Math.floor(Math.random() * 4)];
                break;
            case '–ê–ª–∫–∞—à':
                messageText = ['–û–¢–î–ê–ô –ú–û–ò –î–ï–ù–¨–ì–ò!!!', '–Ø –ñ–î–£ –¢–ï–ë–Ø –£ –®–ö–û–õ–´!!!', '–¢–´ –ì–î–ï –ü–†–Ø–ß–ï–®–¨–°–Ø???', '–í–´–•–û–î–ò –ü–û–ì–û–í–û–†–ò–ú!!!'][Math.floor(Math.random() * 4)];
                break;
            case '–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫ –ü–µ—Ç—è':
                messageText = ['–û—Ç–≤–µ—Ç—å —Å—Ä–æ—á–Ω–æ!', '–¢–µ–±—è –∏—â–µ—Ç —Ñ–∏–∑—Ä—É–∫!', '–ó–∞ —Ç–æ–±–æ–π –ø—Ä–∏—à–ª–∏!', '–¢—ã –ø–æ–ø–∞–ª –≤ –Ω–µ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏!'][Math.floor(Math.random() * 4)];
                break;
        }
        
        // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        const now = new Date();
        const hours = now.getHours().toString().padStart(2, '0');
        const minutes = now.getMinutes().toString().padStart(2, '0');
        const time = `${hours}:${minutes}`;
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
        const newMessage = {
            text: messageText,
            time: time,
            received: true
        };
        
        chat.messages.push(newMessage);
        chat.lastMessage = messageText;
        chat.time = time;
        chat.unread++;
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –∏ –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        updateChatUI(chat);
        showNotification(chat.name, messageText, chat.avatar);
    }, Math.random() * 4000 + 3000); // 3-7 —Å–µ–∫—É–Ω–¥
    
    // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º —Å–ª—É—á–∞–π–Ω—ã–µ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    setInterval(() => {
        const apps = [
            { title: 'Instagram', message: '–£ –≤–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!', icon: 'üì∑' },
            { title: 'TikTok', message: '–í–∞—à–µ –≤–∏–¥–µ–æ –Ω–∞–±–∏—Ä–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å!', icon: 'üéµ' },
            { title: '–®–∫–æ–ª–∞', message: '–°–†–û–ß–ù–û! –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ!', icon: 'üè´' },
            { title: '–ë–∞–Ω–∫', message: '–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!', icon: 'üí≥' },
            { title: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä', message: '–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É +7********45', icon: '‚ùì' }
        ];
        
        const randomApp = apps[Math.floor(Math.random() * apps.length)];
        sendPushNotification(randomApp.title, randomApp.message, randomApp.icon);
    }, Math.random() * 8000 + 5000); // 5-13 —Å–µ–∫—É–Ω–¥
}

// –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Flood-—Ä–µ–∂–∏–º–∞
function stopFloodMode() {
    // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
    clearInterval(floodCallInterval);
    clearInterval(floodMessageInterval);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞
    sendPushNotification('–°–∏—Å—Ç–µ–º–∞', 'Flood-—Ä–µ–∂–∏–º –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω', '‚úÖ');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI —á–∞—Ç–∞
function updateChatUI(chat) {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    const chatItem = document.querySelector(`.chat-item[data-chat-id="${chat.id}"]`);
    if (chatItem) {
        const lastMessageElement = chatItem.querySelector('.chat-last-message');
        const timeElement = chatItem.querySelector('.chat-time');
        
        lastMessageElement.textContent = chat.lastMessage;
        timeElement.textContent = chat.time;
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–∞ —Å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–º–∏
        let unreadBadge = chatItem.querySelector('.unread-badge');
        if (unreadBadge) {
            unreadBadge.textContent = chat.unread;
        } else {
            const chatMeta = chatItem.querySelector('.chat-meta');
            unreadBadge = document.createElement('div');
            unreadBadge.className = 'unread-badge';
            unreadBadge.textContent = chat.unread;
            chatMeta.appendChild(unreadBadge);
        }
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–π–¥–∂–µ–π –Ω–∞ –∏–∫–æ–Ω–∫–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    updateAppBadges();
} 